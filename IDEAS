build virtualenv in as command
xmlrpc api + examples

retrieve package name from setup.py for Python packages

clean up client stuff!

tagset documentation

one super-client that can detect setup.py, run tests/communicate results, etc.

datastore stuff/archival:
 - get all tagsets
 - get all updates by tagset
 - 'flush tagset'?

everything else can be "within last month"

organize reports with FAILURES at top (unless marked otherwise)

organize git clone/copy etc, hg clone/copy, svn clone/copy.

concatenated output, etc? for GitClone?

a conf.d?

some sort of history ("8 of last 8 succeeded") + flush history
  - keep (configurable) 1 month on display?

client logfile that's communicated back to server @ end.

file upload/download?

integrate TAP?

explain tagsets

anti-DoS: set a default limit on upload size; and/or require package/password.

authentication ^^^ for results submission

separate? authentication for thru-Web configuration

sqlite-based db?

persistent conn?

FIX client_ip nonsense

is_building, request_build => persist

crashing client still needs to report, esp with is_building

nose plugin to report?  + setup.py test and nose config => users.

test client code!

periodic breakage => tests get rerun ever hour until it works:
  masks stochastic errors...

move check code into client.

hierarchical tree of reports, instead of list-of-lists?  (think git stuff)

rename svnclone to svncheckout; have git clone and svncheckout create the
cachedirectory if possible.

client scripts should be much friendlier about one-script-for-multiple-machines.

a directory of public pony-build master servers URLs built-in...? or
retrievable via XML-RPC from my server? or available via a file?  with
short names?

a (hierarchical?) list of projects w/config info, e.g.

   python/cpython2-trunk - svn, co from here, run these commands

so that you can refer via a nice name and not have to configure stuff
yourself?  make it an SHA-signed, downloadable file...? or servered?
make it a SEPARATE, or can-be-included, server from the straight
pony-build server?

subprocess incremental reporting.

test swarm!!  (jacob)
   http://ejohn.org/blog/test-swarm-alpha-open/

"top builders" view.

http://www.simile-widgets.org/timeline/  (grig)

pygame inspired stuff (ilume):
 - send test results back to server from install runs
 - include tests in installed package, of course

at what point does my stupid database model stop scaling? ;)

latest results for main page
Things To Look At (for main page)

auto remove stale builds after a certain amount of time?

allow setting builds that SHOULD ALWAYS BE DISPLAYED, even if out of
   date/stale/no results/etc.

quickstart guide
architecture diagram

svn/git/etc. version!

relative times, or times in viewer timezone, or ...?

importable client/API improvement (pbc)

file upload API? maybe specify another server for upload via
   ftp, etc?

JSON format (both client output AND server output)

"opinionated software"

sort on column in various summary views.

database schema should include package name and time submitted.

GPG-based leaderboard?

revision info

switch to python3?

look at http://codespeak.net:8099/summary

http://blip.tv/file/2518623/

http://build.chromium.org/buildbot/waterfall/console

test pony build client on python2.3 and 2.2?

--

tonite:
 - cleanup temp dir flag
 - svn info/git status

---

before release:

 - set a better default server url

---

url download/install
pypi/setup.py integration
django

 + need hg
 + virtualenv integration
 + coverage info
 + unittest (junitxml?)

---